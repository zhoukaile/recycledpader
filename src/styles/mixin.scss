/*
 * Copyright (c) 2016-Now PhotoArtLife PD, All rights reseved.
 * @fileoverview | sass minxin 配置项目中公共处理的mixin
 * @Author: mukuashi@PhotoArtLife | mukuashi@qq.com
 * @Date:   2016-04-18 11:40:27
 * @version 0.1 | 2017-01-18 // Initial version.
 * @version 0.2 | 2017-01-28 // add reset and position common.
 * @version 0.3 | 2017-03-30 // add some basic linear-gradient mixin
 * @version 0.4 | 2017-04-08 // add mixin if扩展
 * @Last Modified by: mukuashi
 * @Last Modified time: 2018-09-13 10:36:10
*/
@import "theme";
//各种浏览器前缀
@mixin prefix($property, $value) {
  @each $prefix in -webkit-, -moz-, -ms-, -o-, '' {
    #{$prefix}#{$property}: $value;
  }
}
//clearfix清除浮动
@mixin clearfix {
  zoom: 1;
  &:before,
  &:after {
    content: '';
    display: table;
  }
  &:after {
    clear: both;
    visibility: hidden;
    font-size: 0;
    height: 0;
  }
}
//color fade
@mixin dark-fade($value) {
  color: rgba($dark-color,$value);
}
//去掉button|input等控件默认样式
@mixin widget-initialize {
  border: none;
  outline:none;
  -webkit-appearance:none;
}
//定制并覆盖AntDesign的默认button
@mixin button-initialize($width:null,$height:null,$font-size:null,$padding:null) {
  border: none;
  border-radius: 0;
  padding: 0 if($padding, $padding,rem(36px));
  min-width: if($width, $width,$default-button-width);
  height: if($height,$height,$default-button-height);
  line-height: if($height,$height,$default-button-height);
  font-size: if($font-size,$font-size,$default-button-font-size);
  @include linear-gradient2;
  transition: background .45s ease-in-out, border .45s ease-in;
  > span {
    letter-spacing: 4px;
    font-size:$font-size; 
  }
  > .icon {
    display: inline-block;
  }
}
@mixin button-initialize-hover {
  &:hover {
    background: transparent;
    transition: .2s $ease-in-circ;
    border: 3px solid $primary-color;
    border-radius: 2px;
    line-height: #{$default-button-height - rem(5.5px)};
    > span {
      color: $default-content-text-color;
      font-weight: 600;
    } 
  }
}
//ul-initialize
@mixin ul-initialize {
  list-style: none;
  margin: 0;
  padding: 0;
}
//all component reset
@mixin component-initialize {
  font-family: $font-family-default;
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $default-text-color;
  @include prefix(box-sizing,$box-sizing);
  @include ul-initialize;
}
//when the article or text overflow，show ... | send box max-width
@mixin text-overflow ($max-width) {
	max-width:$max-width;
	overflow: hidden;
	text-overflow:ellipsis;
	white-space: nowrap;
}
//rotate
@mixin rotate ($deg) {
  @include prefix(transform,rotate($deg));
}
// input status
// == when focus or actived
@mixin active($color: $outline-color) {
  border-color: $color;
  outline: 0;
  box-shadow: 0 0 $outline-blur-size $outline-width fade($color, 20%);
}
// == when hoverd
@mixin hover($color: $input-hover-border-color) {
  border-color:$color;
}
//disable
@mixin disabled {
  background-color: $input-disabled-bg;
  opacity: 1;
  cursor: not-allowed;
  color: $disabled-color;
  &:hover {
    @include hover($input-border-color);
  }
}
//input
@mixin input-default {
  border: $border-width-base $border-style-base $border-color-base;
  @include border-radius-box (4px);
}
@mixin box-hover {
  border-color: $input-focus-border-color;
}
@mixin box-focus {
  outline: 0;
  border-color: $input-focus-border-color;
  box-shadow:inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(102,175,233,.6);
  transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
}
//open or close arrow
@mixin shrinkage-close() {
  @include iconfont-size-under-12px(9px, 0);
}
@mixin shrinkage-open() {
  @include iconfont-size-under-12px(9px, 90deg);
}
// fix chrome 12px bug, support ie
@mixin iconfont-size-under-12px($size, $rotate: 0deg) {
  display: inline-block;
  transform: scale($size/$font-size-base) rotate($rotate);
}
//special border-radius circle
@mixin border-radius-box ($radius) {
  @include prefix(border-radius,$radius);
}
//size
@mixin size($width, $height) {
  width: $width;
  height: $height;
}
@mixin square($size) {
  @include size($size,$size);
}
//position
@mixin custom-position($position,$top: null,$bottom: null ,$left: null, $right:null, $zindex:null) {
  position: $position;
  top: $top;
  bottom: $bottom;
  left: $left;
  right: $right;
  z-index: $zindex;
}
//水平垂直居中0
@mixin center-middle {
  @include custom-position(absolute,$top:50%,$left:50%);
  transform: translate(-50%,-50%);
}
//水平垂直居中1的部分实现
@mixin center-middle1($height:null) {
  height: $height;
  line-height: $height;
}
//水平垂直居中2
@mixin flex-center-middle {
  @include flexbox;
  @include justify-content($justify:center);
	@include align-items($align:center);
}
// Placeholder text
@mixin placeholder($color: $input-placeholder-color) {
  //Firefox
  &::-moz-placeholder {
    color: $color;
    opacity: 1; // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526
  }
  // Internet Explorer 10+
  &:-ms-input-placeholder {
    color: $color;
  }
  // Safari and Chrome
  &::-webkit-input-placeholder {
    color: $color;
  }
}
//opacity
@mixin opacity($opacity) {
  $IEValue: $opacity*100;
  @include prefix(opacity,$opacity);
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="+$IEValue+")";
  //ie8 filter *IE滤镜，透明度50%*
  filter: alpha(opacity=$IEValue);
}
// rotate for ie8 and blow
@mixin ie-rotate($rotation) {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=@{rotation})";
}

// rotate for ie8 and blow
// degrees unit
@mixin ie-rotate-via-degrees($degrees) {
  -ms-filter: "progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=@{costheta}, M12=@{negsintheta}, M21=@{sintheta}, M22=@{costheta})";
  zoom: 1;
  :root & {
    filter: none;
  }
}
//button背景渐变-1
@mixin linear-gradient-box {
  background: rgba(#0189ff, 1);/* 一些不支持背景渐变的浏览器 */ 
  background: -webkit-linear-gradient(left, #0189ff, #0066ff); /* Safari 5.1 - 6.0 */
  background: -o-linear-gradient(right, #0189ff, #0066ff); /* Opera 11.1 - 12.0 */
  background: -moz-linear-gradient(right, #0189ff, #0066ff); /* Firefox 3.6 - 15 */
  background: linear-gradient(to right, #0189ff, #0066ff); /* 标准的语法 */
  //ie9 and son on...
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,startColorstr='#0189ff', endColorstr='#0066ff');
}
//线条背景渐变线条-1
@mixin linear-gradient-line {
  background: rgba(#fafeff, .9);
  background: -webkit-linear-gradient(top, #fafeff, $default-content-arrows-color); 
  background: -o-linear-gradient(right, #fafeff, $default-content-arrows-color);
  background: -moz-linear-gradient(right, #fafeff, $default-content-arrows-color);
  background: linear-gradient(to bottom, #fafeff, $default-content-arrows-color);
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,startColorstr='#fafeff', endColorstr=#{$default-content-arrows-color});
}
//分割线组件
@mixin divider($width:null,$height:null) {
  content: '';
  display: block;
  width: if($width,$width,50%);
  height: if($height,$height,2px);
  margin: auto;
  margin-top: .5%;
  overflow: hidden;
  background: $default-content-tip-color;
}
// keyframes mixin
@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content; 
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  } 
}
//scroll bar
@mixin scrollbar-bar {
  ::-webkit-scrollbar {
    -webkit-appearance: none;
    width:.51667rem;
    height:.51667rem;
  }
  ::-webkit-scrollbar-thumb {
    border: 0;
    border-radius: 4px;
    background-color: rgba(0, 0, 0, .5);
    -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, .5);
  }
  ::-webkit-scrollbar-track-piece {
    //滚动条轨道颜色default
    background: #fff;
  }
  ::-webkit-scrollbar-thumb:horizontal:hover,::-webkit-scrollbar-thumb:vertical:hover {
    background-color:#aaa;
  }
  ::-webkit-scrollbar-thumb:vertical {
    height:.31667rem;
    background-color:rgba(106, 124, 143, 0.52);
  }
  ::-webkit-scrollbar-thumb:horizontal{
    width:.31667rem;
    background-color:#bbb;
  } 
}
//Flexbox SASS mixins
// The spec: http://www.w3.org/TR/css3-flexbox
// Flexbox display
@mixin flexbox {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
@mixin flex($values) {
  -webkit-box-flex: $values;
     -moz-box-flex: $values;
      -webkit-flex: $values;
  	  -ms-flex: $values;
  	      flex: $values;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction) {
  -webkit-flex-direction: $direction;
     -moz-flex-direction: $direction;
      -ms-flex-direction: $direction;
          flex-direction: $direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap) {
  -webkit-flex-wrap: $wrap;
     -moz-flex-wrap: $wrap;
      -ms-flex-wrap: $wrap;
          flex-wrap: $wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
  -webkit-flex-flow: $flow;
     -moz-flex-flow: $flow;
      -ms-flex-flow: $flow;
          flex-flow: $flow;
}

// Display Order
// - applies to: flex items
// <integer>
@mixin order($val) {
  -webkit-box-ordinal-group: $val;  
     -moz-box-ordinal-group: $val;     
  	     -ms-flex-order: $val;     
  	      -webkit-order: $val;  
  		      order: $val;
}

// Flex grow factor
// - applies to: flex items
// <number>
@mixin flex-grow($grow) {
  -webkit-flex-grow: $grow;
     -moz-flex-grow: $grow;
      -ms-flex-grow: $grow;
          flex-grow: $grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number> 
@mixin flex-shrink($shrink) {
  -webkit-flex-shrink: $shrink;
     -moz-flex-shrink: $shrink;
      -ms-flex-shrink: $shrink;
          flex-shrink: $shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width> 
@mixin flex-basis($width) {
  -webkit-flex-basis: $width;
     -moz-flex-basis: $width;
      -ms-flex-basis: $width;
          flex-basis: $width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around 
@mixin justify-content($justify) {
  -webkit-justify-content: $justify;
     -moz-justify-content: $justify;
      -ms-justify-content: $justify;
          justify-content: $justify;
            -ms-flex-pack: $justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch 
@mixin align-content($align) {
  -webkit-align-content: $align;
     -moz-align-content: $align;
      -ms-align-content: $align;
          align-content: $align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch 
@mixin align-items($align) {
  -webkit-align-items: $align;
     -moz-align-items: $align;
      -ms-align-items: $align;
          align-items: $align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch 
@mixin align-self($align) {
  -webkit-align-self: $align;
     -moz-align-self: $align;
      -ms-align-self: $align;
          align-self: $align;
}